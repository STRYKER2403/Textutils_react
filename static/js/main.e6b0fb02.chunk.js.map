{"version":3,"sources":["components/Alert.js","components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","alert","react_default","a","createElement","className","concat","type","role","word","lower","toLowerCase","charAt","toUpperCase","slice","capitalize","msg","data-bs-dismiss","aria-label","Navbar","Fragment","mode","href","title","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","id","aria-current","About","onClick","toggleMode","aria-checked","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","style","color","heading","value","rows","onChange","event","target","backgroundColor","e","preventDefault","NewText","showAlert","split","length","defaultProps","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","document","body","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.e6b0fb02.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n  const capitalize = (word)=>{\r\n    const lower = word.toLowerCase();\r\n    return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n  }\r\n\r\n  return (\r\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n        <strong>{capitalize(props.alert.type)}</strong> {props.alert.msg}.\r\n        <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n        </div>   \r\n  )\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom'\r\n\r\n\r\nexport default function Navbar(props) {\r\n    return(\r\n        <>\r\n        <nav className = {`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n    {/* <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link> */}\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link> */}\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          {/* <Link className=\"nav-link\" to=\"/about\">{props.About}</Link> */}\r\n          <a className=\"nav-link\" href=\"/\">{props.About}</a>\r\n        </li>\r\n      </ul>\r\n      {/* <form className=\"d-flex\" role=\"search\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-primary\" type=\"submit\">Search</button>\r\n      </form> */}\r\n      <div className= {`form-check form-switch text-${props.mode === \"light\" ? \"dark\" : \"light\"}`}>\r\n          <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" aria-checked=\"false\" id=\"flexSwitchCheckDefault\" />\r\n          <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\" >Enable Dark Mode</label>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n</nav>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  About: PropTypes.string.isRequired\r\n}\r\n\r\nNavbar.defaultProps = {\r\n  title: \"dummy text\",\r\n  About: \"dummy text2\"\r\n}","import React,{useState} from 'react'\r\n\r\n\r\nexport default function TextForm(props) {\r\n    const [text, setText] = useState(\"\");\r\n\r\n    const UpHandle = (e)=> {\r\n        e.preventDefault();  //To Stop page from Reloading\r\n        // console.log(\"Uppercase Was Clicked\");\r\n        let NewText = text.toUpperCase();\r\n        setText(NewText);\r\n        props.showAlert(\"Converted To Upper Case\",\"success\");\r\n    }\r\n\r\n    const Onnchange = (event)=> {\r\n        // console.log(\"Typing...\");\r\n        setText(event.target.value)\r\n    }\r\n\r\n    const LoHandle = (e)=> {\r\n        e.preventDefault();  //To Stop page from Reloading\r\n        // console.log(\"Lowercase Was Clicked\");\r\n        let NewText = text.toLowerCase();\r\n        setText(NewText);\r\n        props.showAlert(\"Converted To Lower Case\",\"success\");\r\n    }\r\n\r\n    const ClearHandle = (e)=> {\r\n        e.preventDefault();  //To Stop page from Reloading\r\n        let Newtext = \"\";\r\n        setText(Newtext);\r\n        props.showAlert(\"Text Cleared\",\"success\");\r\n    }\r\n\r\n    return (\r\n    <>\r\n    <form className=\"container my-3\" style = {{color: props.mode === \"light\" ? \"black\" : \"white\"}}>\r\n  \r\n        <div className=\"mb-3 my-3\">\r\n            <h3>{props.heading}</h3>\r\n            <textarea className=\"form-control\" value={text} id=\"myBox\" rows = \"8\" onChange={Onnchange} style = {{backgroundColor: props.mode === \"light\" ? \"white\": \"grey\" , color:props.mode === \"light\" ? \"black\" : \"white\"}} ></textarea>\r\n        </div>\r\n        \r\n        <button className=\"btn btn-primary mx-1\" onClick={UpHandle}>Convert to Uppercase</button>\r\n        <button className=\"btn btn-primary mx-1\" onClick={LoHandle} >Convert to Lowercase</button>\r\n        <button className=\"btn btn-primary mx-1\" onClick={ClearHandle} >Clear Text</button>       \r\n    </form>\r\n\r\n    <div className=\"container my-3\" style = {{color: props.mode === \"light\" ? \"black\" : \"white\"}}>\r\n        <h3>Your Text Summary</h3>\r\n        <p>{text.split(\" \").length} words {text.length} characters</p>\r\n        <p>{0.008 * text.split(\" \").length} minutes read</p>    \r\n        <h3>Preview</h3>\r\n        <p>{text.length>0?text:\"Enter Something To Preview\"}</p>\r\n    </div>\r\n  \r\n    </>\r\n  )\r\n}\r\n","import React,{ useState } from 'react';\nimport './App.css';\n// import About from './components/About';\nimport Alert from './components/Alert';\nimport Navbar from './components/Navbar.js';\nimport TextForm from './components/TextForm';\n\n    // import {\n    //   BrowserRouter as Router,\n    //   Routes,\n    //   Route\n    // } from \"react-router-dom\";\n\n\nfunction App() {\n  const [mode,setMode] = useState(\"light\");\n  const [alert,setAlert] = useState(null);\n\n  const showAlert = (message,type)=> {\n      setAlert({\n        msg : message,\n        type: type\n      })\n\n      setTimeout(()=>{\n        setAlert(null);\n      },1500);\n  }\n\n  const ToggleMode = ()=> {\n    if(mode === \"light\")\n    {\n        setMode(\"dark\");\n        document.body.style.backgroundColor = \"#031a2e\";  \n        showAlert(\"Dark Mode Has Been Enabled\",\"success\");\n        document.title = \"TextUtils - Dark mode\";\n\n        // setInterval(()=>{\n        //   document.title = \"TextUtils is Amazing\";\n        // },2000);\n\n        // setInterval(()=>{\n        //   document.title = \"TextUtils is Amazingly Good\";\n        // },1500);\n    }\n    else\n    {\n        setMode(\"light\");\n        document.body.style.backgroundColor = \"white\";\n        showAlert(\"Light Mode Has Been Enabled\",\"success\");\n        document.title = \"TextUtils - Light mode\";\n    } \n  }\n\n  return (\n    <>\n    {/* <Router>\n    <Navbar  mode = {mode} toggleMode = {ToggleMode} title = \"TextUtils\" About = \"About Us\"/>\n    <Alert alert = {alert}/>\n\n    <Routes>\n          <Route exact path=\"/about\" element = {<About />} />\n          <Route exact path=\"/\" element = {<TextForm heading = \"Enter Text to Analyze\" mode = {mode} showAlert = {showAlert}/>} />         \n    </Routes>\n    </Router> */}\n    \n\n    <Navbar  mode = {mode} toggleMode = {ToggleMode} title = \"TextUtils\" About = \"About Us\"/>\n    {/* <Navbar title = {3} About = \"About Us\"/> */}\n    {/* <Navbar title = \"TextUtils\"/> */}\n    <Alert alert = {alert}/>\n    <TextForm heading = \"Enter Text to Analyze\" mode = {mode} showAlert = {showAlert}/>\n    {/* <About></About> */}\n    </>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}